# Generated by Django 4.1.7 on 2023-03-19 15:12

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organization', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('dateOfBirth', models.DateField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=80, null=True, unique=True)),
                ('password', models.CharField(blank=True, max_length=128, null=True)),
                ('isAffiliate', models.BooleanField(default=False)),
                ('isAppTourDone', models.BooleanField(default=False)),
                ('isCustomer', models.BooleanField(default=False)),
                ('isEmailVerified', models.BooleanField(default=False)),
                ('isMarketEmployee', models.BooleanField(default=False)),
                ('isOrganizationAdmin', models.BooleanField(default=False)),
                ('isOrganizationStaff', models.BooleanField(default=False)),
                ('isSoftwareTourDone', models.BooleanField(default=False)),
                ('isWebTourDone', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, max_length=25, null=True)),
                ('phoneNumber', models.CharField(db_index=True, max_length=10, unique=True)),
                ('avatar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.avatar')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
        ),
        migrations.CreateModel(
            name='customerOtpStack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phoneNumber', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format:'+99999999'.Up to 14 digits allowed.", regex='^\\+?1?\\d{6,14}$')])),
                ('otp', models.PositiveIntegerField()),
                ('dateTime', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('whatsapp', models.CharField(max_length=10)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organization.organization')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Marketer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255)),
                ('interviewSummary', models.TextField()),
                ('isEligibleToTravel', models.BooleanField()),
                ('isManager', models.BooleanField()),
                ('joinedDate', models.DateField(auto_now_add=True)),
                ('whatsapp', models.CharField(max_length=10, unique=True)),
                ('salary', models.DecimalField(decimal_places=2, max_digits=9)),
                ('aadharNumber', models.CharField(max_length=12, unique=True, validators=[django.core.validators.RegexValidator('^[0-9]{12}$', 'Aadhar number must be 12 digits')])),
                ('panNumber', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z]{5}[0-9]{4}[A-Z]{1}$', 'Invalid PAN number'), django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(10)])),
                ('bankAccountNumber', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^[0-9]{9,18}$', 'Invalid bank account number'), django.core.validators.MinLengthValidator(9), django.core.validators.MaxLengthValidator(18)])),
                ('ifscCode', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator('^[A-Z]{4}[0-9]{7}$', 'Invalid IFSC code')])),
                ('nameAsPerBank', models.CharField(max_length=255)),
                ('bankName', models.CharField(max_length=255)),
                ('bloodGroup', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('zone', models.ManyToManyField(to='core.zone')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255)),
                ('interviewSummary', models.TextField()),
                ('isManager', models.BooleanField()),
                ('joinedDate', models.DateField(auto_now_add=True)),
                ('phoneNumber', models.CharField(max_length=10, unique=True)),
                ('salary', models.DecimalField(decimal_places=2, max_digits=9)),
                ('aadharNumber', models.CharField(max_length=12, unique=True, validators=[django.core.validators.RegexValidator('^[0-9]{12}$', 'Aadhar number must be 12 digits')])),
                ('panNumber', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z]{5}[0-9]{4}[A-Z]{1}$', 'Invalid PAN number'), django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(10)])),
                ('bankAccountNumber', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^[0-9]{9,18}$', 'Invalid bank account number'), django.core.validators.MinLengthValidator(9), django.core.validators.MaxLengthValidator(18)])),
                ('ifscCode', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator('^[A-Z]{4}[0-9]{7}$', 'Invalid IFSC code')])),
                ('nameAsPerBank', models.CharField(max_length=255)),
                ('bankName', models.CharField(max_length=255)),
                ('bloodGroup', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3, null=True)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.employeerole')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isVerified', models.BooleanField(default=False)),
                ('organization', models.ManyToManyField(to='organization.organization')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Affiliate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commissionPercentage', models.DecimalField(decimal_places=2, default=20, max_digits=4)),
                ('joinedDate', models.DateField(auto_now_add=True)),
                ('revenue', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=9, null=True)),
                ('referCode', models.CharField(default=users.models.generate_unique_string, max_length=6, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['phoneNumber'], name='users_user_phoneNu_ccb692_idx'),
        ),
    ]
